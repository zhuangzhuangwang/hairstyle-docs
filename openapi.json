{
  "openapi": "3.0.0",
  "info": {
    "title": "AI发型设计 API",
    "description": "AI发型设计 提供简单灵活的 API 端点，满足您的 AI 需求",
    "version": "1.0.0",
    "contact": {
      "name": "AI发型设计 Support"
    }
  },
  "servers": [
    {
      "url": "https://api.aihairstyle.cn",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "ailabapi-api-key",
        "description": "API Key for authentication"
      }
    },
    "schemas": {
      "HairstyleEditorProForm": {
        "type": "object",
        "required": ["image", "hair_style", "color", "image_size", "task_type"],
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Image file for hairstyle editing (PNG/JPG/JPEG). ≤3MB, 200x200~1999x1999."
          },
          "hair_style": {
            "type": "string",
            "description": "Hairstyle code",
            "enum": [
              "TinfoilPerm", "Chestnut", "ChoppyBangs", "SlickBack", "BuzzCut", "CurlyShag", "UnderCut", "WavyShag", "LowFade", "ManGreased", "FauxHawk", "HighTightFade", "Comma_Hair", "Korean_Wavy_Crop", "Smooth_Crop", "Natural_Middle_Part", "Side-Part_Crop", "FreshSide-Parted", "FluffyMiddlePart", "Natural_Side-Part", "Wolf_Crop", "Wind-Tousled_Crop", "Side-Parted_Textured", "WavyMiddlePart", "ShortCurlyPixie", "JapaneseShort", "MediumLongLayered", "ShortNeatBob", "DoubleBun", "PixieCut", "LongHimeCut", "BobCut", "CurlyBob", "LongCurly", "LongWavy", "FishtailBraid", "ShortPixieWithShavedSides", "Updo", "BluntBowlCut", "Chignon", "SlickedBack", "StackedCurlsInShortBob", "WavyFrenchBobVibesfrom1920", "ShortTwintails", "LongStraight", "TwinBraids", "Ponytail", "LongTwintails", "BoxBraids", "FrenchBangs", "ShoulderLengthHair", "Side-Parted_Waves", "Magic_Perm", "Vintage_Curls", "Mushroom_Curl", "Textured_Crop", "Side_Flip_Perm", "Layered_Waves"
            ]
          },
          "color": {
            "type": "string",
            "description": "Color (optional).",
            "enum": [
              "blonde","platinumBlonde","brown","lightBrown","blue","lightBlue","purple","lightPurple","pink","black","white","grey","silver","red","orange","green","gradient","multicolored","darkBlue","burgundy","darkGreen"
            ]
          },
          "image_size": { "type": "integer", "nullable": true, "enum": [1,2,3,4], "description": "Returns the number of images. Default 1." },
          "task_type": {
            "type": "string",
            "enum": ["async"],
            "description": "Task Type. async: Asynchronous task.",
            "default": "async"
          }
        }
      },
      "FaceAnalysisForm": {
        "type": "object",
        "required": ["task_type", "image"],
        "properties": {
          "task_type": {
            "type": "string",
            "enum": ["async"],
            "description": "Task Type. async: Asynchronous task.",
            "default": "async"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Image file for face analysis (PNG/JPG/JPEG). ≤3MB, 200x200~1999x1999."
          }
        }
      },
      "AsyncTaskQueryParams": {
        "type": "object",
        "required": ["task_id"],
        "properties": {
          "task_id": {
            "type": "string",
            "description": "The task_id returned by the asynchronous API."
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Request ID"
          },
          "log_id": {
            "type": "string",
            "description": "Log ID"
          },
          "error_code": {
            "type": "integer",
            "description": "Status code (0 for success)"
          },
          "error_msg": {
            "type": "string",
            "description": "Error message"
          },
          "error_detail": {
            "type": "object",
            "properties": {
              "status_code": {
                "type": "integer",
                "description": "HTTP status code"
              },
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "code_message": {
                "type": "string",
                "description": "Error code description"
              },
              "message": {
                "type": "string",
                "description": "Detailed error message"
              }
            }
          }
        }
      },
      "HairstyleEditorProResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "task_id": {
                "type": "string",
                "description": "Task ID for async processing"
              },
              "result": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Result image URL"
                },
                "description": "Array of result image URLs"
              }
            }
          }
        ]
      },
      "FaceAnalysisResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "face_num": {
                    "type": "integer",
                    "description": "Number of faces detected"
                  },
                  "face_info": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "face_rect": {
                          "type": "object",
                          "properties": {
                            "left": {
                              "type": "integer",
                              "description": "Left coordinate"
                            },
                            "top": {
                              "type": "integer",
                              "description": "Top coordinate"
                            },
                            "width": {
                              "type": "integer",
                              "description": "Width"
                            },
                            "height": {
                              "type": "integer",
                              "description": "Height"
                            }
                          }
                        },
                        "face_angle": {
                          "type": "object",
                          "properties": {
                            "yaw": {
                              "type": "number",
                              "description": "Yaw angle"
                            },
                            "pitch": {
                              "type": "number",
                              "description": "Pitch angle"
                            },
                            "roll": {
                              "type": "number",
                              "description": "Roll angle"
                            }
                          }
                        },
                        "face_proportion": {
                          "type": "number",
                          "description": "Face proportion in image"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "AsyncTaskResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SuccessResponse"
          },
          {
            "type": "object",
            "properties": {
              "task_status": {
                "type": "integer",
                "description": "Task status: 0=queued, 1=processing, 2=completed, -1=failed",
                "enum": [0, 1, 2, -1]
              },
              "result": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Result image URL"
                },
                "description": "Array of result image URLs (when task_status=2)"
              }
            }
          }
        ]
      }
    }
  },
  "paths": {
    "/portrait/effects/hairstyle-editor-pro": {
      "post": {
        "summary": "Hairstyle Editor Pro",
        "description": "基于稳定扩散模型的发型编辑API，支持多种发型和颜色选择",
        "tags": ["AI Portrait"],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/HairstyleEditorProForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HairstyleEditorProResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/portrait/analysis/face-analysis": {
      "post": {
        "summary": "Face Analysis",
        "description": "分析图片中的人脸信息，包括人脸数量、位置、角度等",
        "tags": ["AI Portrait"],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FaceAnalysisForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceAnalysisResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/common/query-async-task-result": {
      "get": {
        "summary": "Query Async Task Results",
        "description": "查询异步任务的处理结果，获取最终的处理结果",
        "tags": ["Common"],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The task_id returned by the asynchronous API."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/common/query-credits": {
        "parameters": [],
        "get": {
          "summary": "Querying credits",
          "description": "Querying credits",
          "tags": ["Common"],
          "security": [
            {
              "apiKeyAuth": []
            }
          ],
          "parameters": [],
          "responses": {
            "default": {
              "headers": {
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "application/json"
                }
              },
              "description": "Querying credits",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error_code": {
                        "type": "integer"
                      },
                      "error_code_str": {
                        "type": "string"
                      },
                      "error_msg": {
                        "type": "string"
                      },
                      "error_detail": {
                        "type": "object",
                        "properties": {
                          "status_code": {
                            "type": "integer"
                          },
                          "code": {
                            "type": "string"
                          },
                          "code_message": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "unique_sign": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "integer"
                          },
                          "total": {
                            "type": "integer"
                          },
                          "last_recharge_balance": {
                            "type": "integer"
                          },
                          "balance_warning": {
                            "type": "integer"
                          },
                          "first_buy_time": {
                            "type": "integer"
                          },
                          "last_update_time": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "error_code": 0,
                    "error_code_str": "",
                    "error_msg": "",
                    "error_detail": {
                      "status_code": 200,
                      "code": "",
                      "code_message": "",
                      "message": ""
                    },
                    "data": {
                      "unique_sign": "",
                      "name": "",
                      "balance": 0,
                      "total": 0,
                      "last_recharge_balance": 0,
                      "balance_warning": 0,
                      "first_buy_time": 0,
                      "last_update_time": 0
                    }
                  }
                }
              }
            }
          }
        }
    }
  }
}
